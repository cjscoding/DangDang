plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
    id 'java'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = "11"

//QueryDSL 설정 여기부터
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
    library = 'com.querydsl:querydsl-apt'
}

sourceSets {
    main.java.srcDir querydslDir srcDirs("src/main/resources") srcDirs("src/main/resources/profiles")
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

//QueryDSL 설정 여기까지 추가

configurations {
    querydsl.extendsFrom compileClasspath
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslDir)
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Project으로 데이터 조회할 때, 조회하지는 않는 연관엔티티 들이 프록시 상태여서 에러가 발생
    // 이 라이브러리는 그런 친구들에게 null을 대입해준다
     implementation("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5")

    // Jwt 관련설정
    implementation 'com.auth0:java-jwt:3.18.2'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'org.projectlombok:lombok:1.18.20'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'

    // Swagger 관련 설정
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.4'
    // Swagger API 문서에서, Spring-Security 인자들 없애줌
    implementation 'org.springdoc:springdoc-openapi-security:1.6.4'
    // Pageable객체들 파라미터 만들어줌
    //implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.4'

    //MongoDB 관련 설정
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    //Exception Handler
    implementation 'com.google.code.gson:gson'
    implementation 'org.apache.httpcomponents:httpclient'

    //Kurento 설정
    implementation 'org.springframework:spring-websocket:5.3.15'
    implementation 'org.webjars:webjars-locator:0.42'
    implementation 'org.webjars.bower:jquery:3.6.0'
    implementation 'org.webjars.bower:bootstrap:5.1.3'
    implementation 'org.webjars.bower:demo-console:1.5.1'
    implementation 'org.webjars.bower:ekko-lightbox:5.2.0'
    implementation 'org.webjars.bower:webrtc-adapter:7.4.0'
    implementation 'org.kurento:kurento-client:6.16.3'
    implementation 'org.kurento:kurento-utils-js:6.15.0'
    implementation 'commons-io:commons-io:2.11.0'

    // sockJS, Stomp 라이브러리
    compile("org.webjars:sockjs-client:1.0.2");
    compile("org.webjars:stomp-websocket:2.3.3");

    // application/xml Converter // kakao API용
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.10.3'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // developmentOnly 'org.apache.tomcat.embed:tomcat-embed-jasper:10.0.14'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor" //matterMost
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

/** * comileQuerydsl.doFirst 추가 */
compileQuerydsl.doFirst {
    if(file(querydslDir).exists() )
        delete(file(querydslDir))
}



bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    println "zone: $activeProfile"
    systemProperty "spring.profiles.active", activeProfile
}

test {
    useJUnitPlatform()
}
targetCompatibility = JavaVersion.VERSION_11
